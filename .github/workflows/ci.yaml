name: ci
on: pull_request
jobs:
  go-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.x
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run linters
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=3m
  go-test:
    strategy:
      matrix:
        go-version: [1.22.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: go tests
        run: go test -v -covermode=count -json ./... > test.json
      - name: annotate go tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.5.1
        with:
          test-results: test.json
  test:
    runs-on: ubuntu-latest
    env:
      BATON_LOG_LEVEL: debug
      BATON_ACCOUNT_ID: ${{ secrets.BATON_ACCOUNT_ID }}
      BATON_ZOOM_CLIENT_ID: ${{ secrets.BATON_ZOOM_CLIENT_ID }}
      BATON_ZOOM_CLIENT_SECRET: ${{ secrets.BATON_ZOOM_CLIENT_SECRET }}
      CONNECTOR_GRANT: 'group:zjg1idFWQt25Ohhr7752Wg:member:user:7czGQEusRh2IasXfsdDh_Q'
      CONNECTOR_ENTITLEMENT: 'group:zjg1idFWQt25Ohhr7752Wg:member'
      CONNECTOR_PRINCIPAL: 'user'
      CONNECTOR_PRINCIPAL_TYPE: '7czGQEusRh2IasXfsdDh_Q'
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.x
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install baton
        run: ./scripts/get-baton.sh && mv baton /usr/local/bin
      - name: Build baton-zoom
        run: go build ./cmd/baton-zoom
      - name: Run baton-zoom
        run: BATON_ACCOUNT_ID='vLa_mb6MQliljoczREintw' ./baton-zoom 
      # - name: Revoke grant
      #   run: ./baton-zoom --revoke-grant "${{ env.CONNECTOR_GRANT }}"
      # - name: Check grant was revoked
      #   run: ./baton-zoom && baton grants --entitlement "${{ env.CONNECTOR_ENTITLEMENT }}" --output-format=json | jq --exit-status "if .grants then .grants[]?.principal.id.resource != \"${{ env.CONNECTOR_PRINCIPAL }}\" else . end"
      # - name: Grant entitlement
      #   run: ./baton-zoom --grant-entitlement "${{ env.CONNECTOR_ENTITLEMENT }}" --grant-principal "${{ env.CONNECTOR_PRINCIPAL }}" --grant-principal-type "${{ env.CONNECTOR_PRINCIPAL_TYPE }}"
      # - name: Check grant was granted
      #   run: ./baton-zoom && baton grants --entitlement "${{ env.CONNECTOR_ENTITLEMENT }}" --output-format=json | jq --exit-status ".grants[].principal.id.resource == \"${{ env.CONNECTOR_PRINCIPAL }}\""